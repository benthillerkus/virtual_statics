# This file configures the static analysis results for your project (errors,
# warnings, and lints).
#
# This enables the 'recommended' set of lints from `package:lints`.
# This set helps identify many issues that may lead to problems when running
# or consuming Dart code, and enforces writing Dart using a single, idiomatic
# style and format.
#
# If you want a smaller set of lints you can change this to specify
# 'package:lints/core.yaml'. These are just the most critical lints
# (the recommended set includes the core lints).
# The core lints are also what is used by pub.dev for scoring packages.

include: package:lints/recommended.yaml

# Uncomment the following section to specify additional rules.

linter:
  rules:
    - camel_case_types
    - always_declare_return_types
    - prefer_const_constructors
    - annotate_redeclares
    - annotate_overrides
    - avoid_empty_else
    - prefer_function_declarations_over_variables
    - file_names
    - prefer_final_fields
    - avoid_final_parameters
    - parameter_assignments
    - avoid_catching_errors
    - prefer_final_in_for_each
    - prefer_final_locals
    - avoid_function_literals_in_foreach_calls
    - close_sinks
    - cast_nullable_to_non_nullable
    - use_enums
    - use_named_constants
    - avoid_print
    - require_trailing_commas
    - public_member_api_docs
    - sort_unnamed_constructors_first
    - avoid_field_initializers_in_const_classes
    - recursive_getters


# analyzer:
#   exclude:
#     - path/to/excluded/files/**

analyzer:
  language:
    strict-casts: true
    strict-inference: true
    strict-raw-types: true


# For more information about the core and recommended set of lints, see
# https://dart.dev/go/core-lints

# For additional information about configuring this file, see
# https://dart.dev/guides/language/analysis-options
